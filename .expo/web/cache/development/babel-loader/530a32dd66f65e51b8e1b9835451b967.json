{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/sunjin/Documents/CoWel-app-master/Components/SignUpScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport firebaseConfig from \"../src/config/fire\";\nimport { ToastsContainer, ToastsStore } from 'react-toasts';\nimport * as Font from 'expo-font';\nimport { Button, Container, Form, Input, Item, Label } from 'native-base';\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nvar SignUp = function (_React$Component) {\n  _inherits(SignUp, _React$Component);\n\n  var _super = _createSuper(SignUp);\n\n  function SignUp(props) {\n    var _this;\n\n    _classCallCheck(this, SignUp);\n\n    _this = _super.call(this, props);\n\n    _this.signUpUser = function (email, password, displayName) {\n      try {\n        if (_this.state.password.length < 6) {\n          ToastsStore.warning(\"회원가입에 실패하였습니다. 비밀번호를 6자리 이상 입력해주세요\");\n          return;\n        }\n\n        firebase.auth().createUserWithEmailAndPassword(email, password).then(function (userInfo) {\n          userInfo.user.updateProfile({\n            displayName: displayName\n          }).then(function () {});\n          var userRef = firebase.firestore().collection('users').doc(userInfo.user.uid);\n          userRef.set({\n            displayName: displayName,\n            email: email\n          });\n\n          _this.props.navigation.navigate('SetProfileScreen');\n        });\n      } catch (error) {\n        ToastsStore.error(\"회원가입에 실패하였습니다. 이미 있는 아이디입니다\");\n      }\n    };\n\n    _this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      isReady: false\n    };\n    return _this;\n  }\n\n  _createClass(SignUp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                'MapoDPP': require(\"../assets/fonts/MapoDPP.ttf\"),\n                'RIDIBatang': require(\"../assets/fonts/RIDIBatang.ttf\")\n              }));\n\n            case 2:\n              this.setState({\n                isReady: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Container, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }, React.createElement(ImageBackground, {\n        source: require(\"../assets/background.jpg\"),\n        style: styles.bgImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          justifyContent: 'space-between'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }\n      }, \"CoWel\"), React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }\n      }, React.createElement(Item, {\n        floatingLabel: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }\n      }, React.createElement(Label, {\n        style: {\n          fontFamily: 'RIDIBatang'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 33\n        }\n      }, \"Name\"), React.createElement(Input, {\n        autoCapitalize: \"none\",\n        autoCorrect: false,\n        onChangeText: function onChangeText(displayName) {\n          return _this2.setState({\n            displayName: displayName\n          });\n        },\n        style: styles.form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 33\n        }\n      })), React.createElement(Item, {\n        floatingLabel: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }\n      }, React.createElement(Label, {\n        style: {\n          fontFamily: 'RIDIBatang'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 33\n        }\n      }, \"Email\"), React.createElement(Input, {\n        autoCapitalize: \"none\",\n        autoCorrect: false,\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email\n          });\n        },\n        style: styles.form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 33\n        }\n      })), React.createElement(Item, {\n        floatingLabel: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }\n      }, React.createElement(Label, {\n        style: {\n          fontFamily: 'RIDIBatang'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 33\n        }\n      }, \"Password\"), React.createElement(Input, {\n        secureTextEntry: true,\n        autoCapitalize: \"none\",\n        autoCorrect: false,\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password\n          });\n        },\n        style: styles.form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 33\n        }\n      })), React.createElement(Button, {\n        title: \"signup\",\n        style: styles.button_signup,\n        rounded: true,\n        backgroundColor: \"#5c5c5c\",\n        onPress: function onPress() {\n          return _this2.signUpUser(_this2.state.email, _this2.state.password, _this2.state.displayName);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.button_text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 33\n        }\n      }, \"Signup\"))))));\n    }\n  }]);\n\n  return SignUp;\n}(React.Component);\n\nexport { SignUp as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    padding: 20\n  },\n  header: {\n    fontFamily: 'MapoDPP',\n    padding: 10,\n    fontSize: 80,\n    color: 'tomato'\n  },\n  button_text: {\n    color: \"white\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontFamily: \"RIDIBatang\",\n    fontSize: 25\n  },\n  button_signup: {\n    marginBottom: 10,\n    marginTop: 30,\n    padding: 30,\n    width: 200,\n    alignSelf: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#5c5c5c\"\n  },\n  form: {\n    marginTop: 20,\n    marginBottom: 20,\n    fontFamily: \"RIDIBatang\"\n  },\n  bgImage: {\n    position: \"absolute\",\n    width: '100%',\n    height: '100%',\n    left: 0,\n    right: 0\n  }\n});","map":{"version":3,"sources":["/Users/sunjin/Documents/CoWel-app-master/Components/SignUpScreen.js"],"names":["React","Component","firebase","firebaseConfig","ToastsContainer","ToastsStore","Font","Button","Container","Form","Input","Item","Label","apps","length","initializeApp","SignUp","props","signUpUser","email","password","displayName","state","warning","auth","createUserWithEmailAndPassword","then","userInfo","user","updateProfile","userRef","firestore","collection","doc","uid","set","navigation","navigate","error","isReady","loadAsync","require","setState","styles","container","bgImage","justifyContent","header","fontFamily","form","button_signup","button_text","StyleSheet","create","flex","padding","fontSize","color","alignItems","marginBottom","marginTop","width","alignSelf","backgroundColor","position","height","left","right"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;AAGA,OAAO,KAAKC,QAAZ,MAA0B,cAA1B;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AACA,OAAOC,cAAP;AAEA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,cAA7C;AAEA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,IAA5B,EAAkCC,KAAlC,EAAyCC,IAAzC,EAA+CC,KAA/C,QAA4D,aAA5D;;AAGA,IAAI,CAACV,QAAQ,CAACW,IAAT,CAAcC,MAAnB,EAA2B;AACvBZ,EAAAA,QAAQ,CAACa,aAAT,CAAuBZ,cAAvB;AACH;;IAEoBa,M;;;;;AACjB,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,UAqBnBC,UArBmB,GAqBN,UAACC,KAAD,EAAQC,QAAR,EAAkBC,WAAlB,EAAkC;AAC3C,UAAI;AACA,YAAI,MAAKC,KAAL,CAAWF,QAAX,CAAoBN,MAApB,GAA6B,CAAjC,EAAoC;AAChCT,UAAAA,WAAW,CAACkB,OAAZ,CAAoB,oCAApB;AACA;AACH;;AACDrB,QAAAA,QAAQ,CAACsB,IAAT,GAAgBC,8BAAhB,CAA+CN,KAA/C,EAAsDC,QAAtD,EAAgEM,IAAhE,CAAqE,UAACC,QAAD,EAAc;AAC/EA,UAAAA,QAAQ,CAACC,IAAT,CAAcC,aAAd,CAA4B;AAAER,YAAAA,WAAW,EAAXA;AAAF,WAA5B,EAA6CK,IAA7C,CAAkD,YAAM,CAAG,CAA3D;AACA,cAAMI,OAAO,GAAG5B,QAAQ,CAAC6B,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,EAAyCC,GAAzC,CAA6CN,QAAQ,CAACC,IAAT,CAAcM,GAA3D,CAAhB;AACAJ,UAAAA,OAAO,CAACK,GAAR,CAAY;AACRd,YAAAA,WAAW,EAAXA,WADQ;AAERF,YAAAA,KAAK,EAALA;AAFQ,WAAZ;;AAIA,gBAAKF,KAAL,CAAWmB,UAAX,CAAsBC,QAAtB,CAA+B,kBAA/B;AACH,SARD;AASH,OAdD,CAeA,OAAOC,KAAP,EAAc;AACVjC,QAAAA,WAAW,CAACiC,KAAZ,CAAkB,6BAAlB;AACH;AAEJ,KAzCkB;;AAGf,UAAKhB,KAAL,GAAc;AACVD,MAAAA,WAAW,EAAE,EADH;AAEVF,MAAAA,KAAK,EAAE,EAFG;AAGVC,MAAAA,QAAQ,EAAE,EAHA;AAIVmB,MAAAA,OAAO,EAAE;AAJC,KAAd;AAHe;AASlB;;;;;;;;;;+CAISjC,IAAI,CAACkC,SAAL,CAAe;AACjB,2BAAWC,OAAO,+BADD;AAEjB,8BAAcA,OAAO;AAFJ,eAAf,C;;;AAKN,mBAAKC,QAAL,CAAc;AAAEH,gBAAAA,OAAO,EAAE;AAAX,eAAd;;;;;;;;;;;6BAyBK;AAAA;;AACL,aACI,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAEI,MAAM,CAACC,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,eAAD;AAAiB,QAAA,MAAM,EAAEH,OAAO,4BAAhC;AAA8D,QAAA,KAAK,EAAEE,MAAM,CAACE,OAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,cAAc,EAAE;AAAlB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACI,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,EAGI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,aAAa,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE;AAAd,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,KAAD;AACI,QAAA,cAAc,EAAC,MADnB;AAEI,QAAA,WAAW,EAAE,KAFjB;AAGI,QAAA,YAAY,EAAE,sBAAC3B,WAAD;AAAA,iBAAiB,MAAI,CAACqB,QAAL,CAAc;AAAErB,YAAAA,WAAW,EAAXA;AAAF,WAAd,CAAjB;AAAA,SAHlB;AAII,QAAA,KAAK,EAAEsB,MAAM,CAACM,IAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,EAWI,oBAAC,IAAD;AAAM,QAAA,aAAa,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE;AAAED,UAAAA,UAAU,EAAE;AAAd,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,oBAAC,KAAD;AACI,QAAA,cAAc,EAAC,MADnB;AAEI,QAAA,WAAW,EAAE,KAFjB;AAGI,QAAA,YAAY,EAAE,sBAAC7B,KAAD;AAAA,iBAAW,MAAI,CAACuB,QAAL,CAAc;AAAEvB,YAAAA,KAAK,EAALA;AAAF,WAAd,CAAX;AAAA,SAHlB;AAII,QAAA,KAAK,EAAEwB,MAAM,CAACM,IAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAXJ,EAqBI,oBAAC,IAAD;AAAM,QAAA,aAAa,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE;AAAED,UAAAA,UAAU,EAAE;AAAd,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI,oBAAC,KAAD;AACI,QAAA,eAAe,EAAE,IADrB;AAEI,QAAA,cAAc,EAAC,MAFnB;AAGI,QAAA,WAAW,EAAE,KAHjB;AAII,QAAA,YAAY,EAAE,sBAAC5B,QAAD;AAAA,iBAAc,MAAI,CAACsB,QAAL,CAAc;AAAEtB,YAAAA,QAAQ,EAARA;AAAF,WAAd,CAAd;AAAA,SAJlB;AAKI,QAAA,KAAK,EAAEuB,MAAM,CAACM,IALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CArBJ,EAgCI,oBAAC,MAAD;AACI,QAAA,KAAK,EAAC,QADV;AAEI,QAAA,KAAK,EAAEN,MAAM,CAACO,aAFlB;AAGI,QAAA,OAAO,MAHX;AAII,QAAA,eAAe,EAAC,SAJpB;AAKI,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAAChC,UAAL,CAAgB,MAAI,CAACI,KAAL,CAAWH,KAA3B,EAAkC,MAAI,CAACG,KAAL,CAAWF,QAA7C,EAAuD,MAAI,CAACE,KAAL,CAAWD,WAAlE,CAAN;AAAA,SALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEsB,MAAM,CAACQ,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ,CAhCJ,CAHJ,CADJ,CADJ,CADJ;AAmDH;;;;EAhG+BnD,KAAK,CAACC,S;;SAArBe,M;AAmGrB,IAAM2B,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC7BT,EAAAA,SAAS,EAAE;AACPU,IAAAA,IAAI,EAAE,CADC;AAEPR,IAAAA,cAAc,EAAE,QAFT;AAGPS,IAAAA,OAAO,EAAE;AAHF,GADkB;AAM7BR,EAAAA,MAAM,EAAE;AACJC,IAAAA,UAAU,EAAE,SADR;AAEJO,IAAAA,OAAO,EAAE,EAFL;AAGJC,IAAAA,QAAQ,EAAE,EAHN;AAIJC,IAAAA,KAAK,EAAE;AAJH,GANqB;AAY7BN,EAAAA,WAAW,EAAE;AACTM,IAAAA,KAAK,EAAE,OADE;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTZ,IAAAA,cAAc,EAAE,QAHP;AAITE,IAAAA,UAAU,EAAE,YAJH;AAKTQ,IAAAA,QAAQ,EAAE;AALD,GAZgB;AAmB7BN,EAAAA,aAAa,EAAE;AACXS,IAAAA,YAAY,EAAE,EADH;AAEXC,IAAAA,SAAS,EAAE,EAFA;AAGXL,IAAAA,OAAO,EAAE,EAHE;AAIXM,IAAAA,KAAK,EAAE,GAJI;AAKXC,IAAAA,SAAS,EAAE,QALA;AAMXhB,IAAAA,cAAc,EAAE,QANL;AAOXiB,IAAAA,eAAe,EAAE;AAPN,GAnBc;AA4B7Bd,EAAAA,IAAI,EAAE;AACFW,IAAAA,SAAS,EAAE,EADT;AAEFD,IAAAA,YAAY,EAAE,EAFZ;AAGFX,IAAAA,UAAU,EAAE;AAHV,GA5BuB;AAiC7BH,EAAAA,OAAO,EAAE;AACLmB,IAAAA,QAAQ,EAAE,UADL;AAELH,IAAAA,KAAK,EAAE,MAFF;AAGLI,IAAAA,MAAM,EAAE,MAHH;AAILC,IAAAA,IAAI,EAAE,CAJD;AAKLC,IAAAA,KAAK,EAAE;AALF;AAjCoB,CAAlB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { StyleSheet, Text, TextInput, View, ImageBackground } from 'react-native'\n\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport firebaseConfig from '../src/config/fire';\n\nimport { ToastsContainer, ToastsStore } from 'react-toasts';\n\nimport * as Font from 'expo-font';\nimport { Button, Container, Form, Input, Item, Label } from 'native-base';\n\n\nif (!firebase.apps.length) {\n    firebase.initializeApp(firebaseConfig);\n}\n\nexport default class SignUp extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = ({\n            displayName: '',\n            email: '',\n            password: '',\n            isReady: false,\n        })\n    }\n\n    async componentDidMount() {\n\n        await Font.loadAsync({\n            'MapoDPP': require('../assets/fonts/MapoDPP.ttf'),\n            'RIDIBatang': require('../assets/fonts/RIDIBatang.ttf'),\n        });\n\n        this.setState({ isReady: true });\n    }\n\n    signUpUser = (email, password, displayName) => {\n        try {\n            if (this.state.password.length < 6) {\n                ToastsStore.warning(\"회원가입에 실패하였습니다. 비밀번호를 6자리 이상 입력해주세요\");\n                return;\n            }\n            firebase.auth().createUserWithEmailAndPassword(email, password).then((userInfo) => {\n                userInfo.user.updateProfile({ displayName }).then(() => { })\n                const userRef = firebase.firestore().collection('users').doc(userInfo.user.uid);\n                userRef.set({\n                    displayName,\n                    email\n                })\n                this.props.navigation.navigate('SetProfileScreen')\n            })\n        }\n        catch (error) {\n            ToastsStore.error(\"회원가입에 실패하였습니다. 이미 있는 아이디입니다\");\n        }\n\n    }\n\n    render() {\n        return (\n            <Container style={styles.container}>\n                <ImageBackground source={require(\"../assets/background.jpg\")} style={styles.bgImage}>\n                    <View style={{ justifyContent: 'space-between' }}>\n\n                        <Text style={styles.header}>CoWel</Text>\n                        <Form>\n                            <Item floatingLabel>\n                                <Label style={{ fontFamily: 'RIDIBatang' }}>Name</Label>\n                                <Input\n                                    autoCapitalize=\"none\"\n                                    autoCorrect={false}\n                                    onChangeText={(displayName) => this.setState({ displayName })}\n                                    style={styles.form}\n                                />\n                            </Item>\n\n                            <Item floatingLabel>\n                                <Label style={{ fontFamily: 'RIDIBatang' }}>Email</Label>\n                                <Input\n                                    autoCapitalize=\"none\"\n                                    autoCorrect={false}\n                                    onChangeText={(email) => this.setState({ email })}\n                                    style={styles.form}\n                                />\n                            </Item>\n\n                            <Item floatingLabel>\n                                <Label style={{ fontFamily: 'RIDIBatang' }}>Password</Label>\n                                <Input\n                                    secureTextEntry={true}\n                                    autoCapitalize=\"none\"\n                                    autoCorrect={false}\n                                    onChangeText={(password) => this.setState({ password })}\n                                    style={styles.form}\n                                />\n                            </Item>\n\n                            <Button\n                                title=\"signup\"\n                                style={styles.button_signup}\n                                rounded\n                                backgroundColor='#5c5c5c'\n                                onPress={() => this.signUpUser(this.state.email, this.state.password, this.state.displayName)}>\n                                <Text style={styles.button_text}>Signup</Text>\n                            </Button>\n                        </Form>\n                    </View>\n                </ImageBackground>\n            </Container>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: \"center\",\n        padding: 20\n    },\n    header: {\n        fontFamily: 'MapoDPP',\n        padding: 10,\n        fontSize: 80,\n        color: 'tomato'\n    },\n    button_text: {\n        color: \"white\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        fontFamily: \"RIDIBatang\",\n        fontSize: 25\n    },\n    button_signup: {\n        marginBottom: 10,\n        marginTop: 30,\n        padding: 30,\n        width: 200,\n        alignSelf: \"center\",\n        justifyContent: \"center\",\n        backgroundColor: \"#5c5c5c\"\n    },\n    form: {\n        marginTop: 20,\n        marginBottom: 20,\n        fontFamily: \"RIDIBatang\"\n    },\n    bgImage: {\n        position: \"absolute\",\n        width: '100%',\n        height: '100%',\n        left: 0,\n        right: 0\n\n    }\n})\n"]},"metadata":{},"sourceType":"module"}
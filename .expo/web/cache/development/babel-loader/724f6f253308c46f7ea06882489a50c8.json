{"ast":null,"code":"var _jsxFileName = \"/Users/sunjin/Documents/CoWel-app-master/App.js\";\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { createAppContainer } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { createBottomTabNavigator } from 'react-navigation-tabs';\nimport MainScreen from \"./Components/MainScreen\";\nimport LoadingScreen from \"./Components/LoadingScreen\";\nimport WelfareScreen from \"./Components/WelfareScreen\";\nimport LoginScreen from \"./Components/LoginScreen\";\nimport setProfileScreen from \"./Components/SetProfile\";\nimport PersonalSearchTab from \"./Components/AppTabNavigator/PersonalSearchTab\";\nimport MyPageTab from \"./Components/AppTabNavigator/MyPageTab\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport Login from \"./Components/LoginScreen\";\nvar MainStack = createStackNavigator({\n  MainScreen: MainScreen\n}, {\n  defaultNavigationOptions: function defaultNavigationOptions(_ref) {\n    var navigation = _ref.navigation;\n    return {\n      title: 'Main'\n    };\n  }\n});\nvar SearchStack = createStackNavigator({\n  PersonalSearchTab: PersonalSearchTab\n}, {\n  defaultNavigationOptions: function defaultNavigationOptions(_ref2) {\n    var navigation = _ref2.navigation;\n    return {\n      title: 'PersonalSearch'\n    };\n  }\n});\nvar MyPageStack = createStackNavigator({\n  MyPageTab: MyPageTab\n}, {\n  defaultNavigationOptions: function defaultNavigationOptions(_ref3) {\n    var navigation = _ref3.navigation;\n    return {\n      title: 'MyPage'\n    };\n  }\n});\nvar WelfareStack = createStackNavigator({\n  WelfareScreen: WelfareScreen\n}, {\n  defaultNavigationOptions: function defaultNavigationOptions(_ref4) {\n    var navigation = _ref4.navigation;\n    return {\n      title: 'Welfare'\n    };\n  }\n});\nvar BottomTab = createBottomTabNavigator({\n  Main: MainStack,\n  Welfare: WelfareStack,\n  PersonalSearch: SearchStack,\n  MyPage: MyPageStack\n}, {\n  defaultNavigationOptions: function defaultNavigationOptions(_ref5) {\n    var navigation = _ref5.navigation;\n    return {\n      tabBarIcon: function tabBarIcon(_ref6) {\n        var focused = _ref6.focused,\n            tintColor = _ref6.tintColor;\n        var routeName = navigation.state.routeName;\n        var IconComponent = Ionicons;\n        var iconName;\n\n        if (routeName === 'Main') {\n          iconName = focused ? 'md-home' : 'md-home';\n        } else if (routeName === 'Welfare') {\n          iconName = focused ? 'md-heart' : 'md-heart';\n        } else if (routeName === 'PersonalSearch') {\n          iconName = focused ? 'md-search' : 'md-search';\n        } else if (routeName === 'MyPage') {\n          iconName = focused ? 'md-person' : 'md-person';\n        }\n\n        return React.createElement(IconComponent, {\n          name: iconName,\n          size: 25,\n          color: tintColor,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 16\n          }\n        });\n      }\n    };\n  },\n  tabBarOptions: {\n    activeTintColor: 'tomato',\n    inactiveTintColor: 'gray'\n  }\n});\nvar AppStack = createStackNavigator({\n  LoadingScreen: LoadingScreen,\n  'Login': LoginScreen,\n  BottomTab: {\n    screen: BottomTab,\n    navigationOptions: function navigationOptions(_ref7) {\n      var navigation = _ref7.navigation;\n      return {\n        header: null\n      };\n    }\n  }\n});\nexport default createAppContainer(AppStack);","map":{"version":3,"sources":["/Users/sunjin/Documents/CoWel-app-master/App.js"],"names":["React","Component","createAppContainer","createStackNavigator","createBottomTabNavigator","MainScreen","LoadingScreen","WelfareScreen","LoginScreen","setProfileScreen","PersonalSearchTab","MyPageTab","Ionicons","Login","MainStack","defaultNavigationOptions","navigation","title","SearchStack","MyPageStack","WelfareStack","BottomTab","Main","Welfare","PersonalSearch","MyPage","tabBarIcon","focused","tintColor","routeName","state","IconComponent","iconName","tabBarOptions","activeTintColor","inactiveTintColor","AppStack","screen","navigationOptions","header"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\n\nimport { createAppContainer } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { createBottomTabNavigator } from 'react-navigation-tabs';\n\nimport MainScreen from './Components/MainScreen';\nimport LoadingScreen from './Components/LoadingScreen';\nimport WelfareScreen from './Components/WelfareScreen';\nimport LoginScreen from './Components/LoginScreen';\nimport setProfileScreen from './Components/SetProfile'\nimport PersonalSearchTab from './Components/AppTabNavigator/PersonalSearchTab';\nimport MyPageTab from './Components/AppTabNavigator/MyPageTab';\n\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport Login from './Components/LoginScreen';\n\nconst MainStack = createStackNavigator({\n  MainScreen\n},\n  {\n    defaultNavigationOptions: ({ navigation }) => ({\n      title: 'Main'\n    }),\n  }\n);\n\nconst SearchStack = createStackNavigator({\n  PersonalSearchTab\n},\n  {\n    defaultNavigationOptions: ({ navigation }) => ({\n      title: 'PersonalSearch'\n    }),\n  }\n);\n\nconst MyPageStack = createStackNavigator({\n  MyPageTab\n},\n  {\n    defaultNavigationOptions: ({ navigation }) => ({\n      title: 'MyPage'\n    }),\n  }\n);\n\nconst WelfareStack = createStackNavigator({\n  WelfareScreen\n},\n  {\n    defaultNavigationOptions: ({ navigation }) => ({\n      title: 'Welfare'\n    }),\n  }\n);\n\nconst BottomTab = createBottomTabNavigator({\n  Main: MainStack,\n  Welfare: WelfareStack,\n  PersonalSearch: SearchStack,\n  MyPage: MyPageStack,\n\n}, {\n  defaultNavigationOptions: ({ navigation }) => ({\n    tabBarIcon: ({ focused, tintColor }) => {\n      const { routeName } = navigation.state;\n      let IconComponent = Ionicons;\n      let iconName;\n      if (routeName === 'Main') {\n        iconName = focused ? 'md-home' : 'md-home';\n      }\n      else if (routeName === 'Welfare') {\n        iconName = focused ? 'md-heart' : 'md-heart';\n      }\n      else if (routeName === 'PersonalSearch') {\n        iconName = focused ? 'md-search' : 'md-search';\n      }\n      else if (routeName === 'MyPage') {\n        iconName = focused ? 'md-person' : 'md-person';\n      } return <IconComponent name={iconName} size={25} color={tintColor} />;\n    },\n  }),\n  tabBarOptions: {\n    activeTintColor: 'tomato',\n    inactiveTintColor: 'gray',\n  },\n});\n\nconst AppStack = createStackNavigator({\n  LoadingScreen: LoadingScreen,\n  'Login': LoginScreen,\n  BottomTab: {\n    screen: BottomTab,\n    navigationOptions: ({ navigation }) => ({\n      header: null,\n    }),\n  },\n}\n);\n\nexport default createAppContainer(AppStack);\n/*\n\nconst AppStackNavigator = createStackNavigator({\n  Loading: {\n    screen: LoadingScreen\n  },\n  SignUp: {\n    screen: SignUpScreen\n  },\n  Login: {\n    screen: LoginScreen\n  },\n  Main: {\n    screen: MainScreen\n  },\n},\n  {\n    initialRouteName: 'Loading'\n  }\n);\n\n\nconst App = createBottomTabNavigator({\n  Main: { screen: MainScreen },\n  PersonalSearch: { screen: PersonalSearchTab },\n  MyPage: { screen: MyPageTab }\n},\n  {\n    defaultNavigationOptions: ({ navigation }) => ({\n      tabBarIcon: ({ focused, tintColor }) => {\n        const { routeName } = navigation.state;\n        let IconComponent = Ionicons;\n        let iconName;\n        if (routeName === 'Main') {\n          iconName = focused ? 'md-home' : 'md-home';\n        }\n        else if (routeName === 'PersonalSearch') {\n          iconName = focused ? 'md-search' : 'md-search';\n        }\n        else if (routeName === 'MyPage') {\n          iconName = focused ? 'md-person' : 'md-person';\n        } return <IconComponent name={iconName} size={25} color={tintColor} />;\n      },\n    }),\n    tabBarOptions: {\n      activeTintColor: 'tomato',\n      inactiveTintColor: 'gray',\n    },\n  });\n\nconst AppContainer = createAppContainer(AppStackNavigator);\n\nexport default class App extends Component {\n  render() {\n    return <Root><AppContainer /></Root>\n  }\n}\n*/"]},"metadata":{},"sourceType":"module"}
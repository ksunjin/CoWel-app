{"ast":null,"code":"var _jsxFileName = \"/Users/sunjin/Documents/CoWel-app-master/App.js\";\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { createAppContainer } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { createBottomTabNavigator } from 'react-navigation-tabs';\nimport MainScreen from \"./Components/MainScreen\";\nimport LoadingScreen from \"./Components/LoadingScreen\";\nimport SignUpScreen from \"./Components/SignUpScreen\";\nimport LoginScreen from \"./Components/LoginScreen\";\nimport PersonalSearchTab from \"./Components/AppTabNavigator/PersonalSearchTab\";\nimport MyPageTab from \"./Components/AppTabNavigator/MyPageTab\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport Login from \"./Components/LoginScreen\";\nvar LoadingStack = createStackNavigator({\n  LoadingScreen: LoadingScreen\n}, {\n  defaultNavigationOptions: function defaultNavigationOptions(_ref) {\n    var navigation = _ref.navigation;\n    return {\n      title: 'Loading'\n    };\n  },\n  initialRouteName: 'LoadingScreen'\n});\nvar MainStack = createStackNavigator({\n  MainScreen: MainScreen\n}, {\n  defaultNavigationOptions: function defaultNavigationOptions(_ref2) {\n    var navigation = _ref2.navigation;\n    return {\n      title: 'Main'\n    };\n  }\n});\nvar BottomTab = createBottomTabNavigator({\n  Main: {\n    screen: MainScreen\n  },\n  PersonalSearch: {\n    screen: PersonalSearchTab\n  },\n  MyPage: {\n    screen: MyPageTab\n  }\n}, {\n  defaultNavigationOptions: function defaultNavigationOptions(_ref3) {\n    var navigation = _ref3.navigation;\n    return {\n      tabBarIcon: function tabBarIcon(_ref4) {\n        var focused = _ref4.focused,\n            tintColor = _ref4.tintColor;\n        var routeName = navigation.state.routeName;\n        var IconComponent = Ionicons;\n        var iconName;\n\n        if (routeName === 'Main') {\n          iconName = focused ? 'md-home' : 'md-home';\n        } else if (routeName === 'PersonalSearch') {\n          iconName = focused ? 'md-search' : 'md-search';\n        } else if (routeName === 'MyPage') {\n          iconName = focused ? 'md-person' : 'md-person';\n        }\n\n        return React.createElement(IconComponent, {\n          name: iconName,\n          size: 25,\n          color: tintColor,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 16\n          }\n        });\n      }\n    };\n  },\n  tabBarOptions: {\n    activeTintColor: 'tomato',\n    inactiveTintColor: 'gray'\n  }\n});\nvar AppStack = createStackNavigator({\n  LoadingScreen: LoadingScreen,\n  LoginScreen: LoginScreen,\n  BottomTab: {\n    screen: BottomTab,\n    navigationOptions: function navigationOptions(_ref5) {\n      var navigation = _ref5.navigation;\n      return {\n        header: null\n      };\n    }\n  }\n});","map":{"version":3,"sources":["/Users/sunjin/Documents/CoWel-app-master/App.js"],"names":["React","Component","createAppContainer","createStackNavigator","createBottomTabNavigator","MainScreen","LoadingScreen","SignUpScreen","LoginScreen","PersonalSearchTab","MyPageTab","Ionicons","Login","LoadingStack","defaultNavigationOptions","navigation","title","initialRouteName","MainStack","BottomTab","Main","screen","PersonalSearch","MyPage","tabBarIcon","focused","tintColor","routeName","state","IconComponent","iconName","tabBarOptions","activeTintColor","inactiveTintColor","AppStack","navigationOptions","header"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAGA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA,SAASC,wBAAT,QAAyC,uBAAzC;AAEA,OAAOC,UAAP;AACA,OAAOC,aAAP;AACA,OAAOC,YAAP;AACA,OAAOC,WAAP;AACA,OAAOC,iBAAP;AACA,OAAOC,SAAP;AAEA,OAAOC,QAAP;AACA,OAAOC,KAAP;AAEA,IAAMC,YAAY,GAAGV,oBAAoB,CAAC;AACxCG,EAAAA,aAAa,EAAbA;AADwC,CAAD,EAGvC;AACEQ,EAAAA,wBAAwB,EAAE;AAAA,QAAGC,UAAH,QAAGA,UAAH;AAAA,WAAqB;AAC7CC,MAAAA,KAAK,EAAE;AADsC,KAArB;AAAA,GAD5B;AAIEC,EAAAA,gBAAgB,EAAE;AAJpB,CAHuC,CAAzC;AAWA,IAAMC,SAAS,GAAGf,oBAAoB,CAAC;AACrCE,EAAAA,UAAU,EAAVA;AADqC,CAAD,EAGpC;AACES,EAAAA,wBAAwB,EAAE;AAAA,QAAGC,UAAH,SAAGA,UAAH;AAAA,WAAqB;AAC7CC,MAAAA,KAAK,EAAE;AADsC,KAArB;AAAA;AAD5B,CAHoC,CAAtC;AAUA,IAAMG,SAAS,GAAGf,wBAAwB,CAAC;AACzCgB,EAAAA,IAAI,EAAE;AAAEC,IAAAA,MAAM,EAAEhB;AAAV,GADmC;AAEzCiB,EAAAA,cAAc,EAAE;AAAED,IAAAA,MAAM,EAAEZ;AAAV,GAFyB;AAGzCc,EAAAA,MAAM,EAAE;AAAEF,IAAAA,MAAM,EAAEX;AAAV;AAHiC,CAAD,EAIvC;AACDI,EAAAA,wBAAwB,EAAE;AAAA,QAAGC,UAAH,SAAGA,UAAH;AAAA,WAAqB;AAC7CS,MAAAA,UAAU,EAAE,2BAA4B;AAAA,YAAzBC,OAAyB,SAAzBA,OAAyB;AAAA,YAAhBC,SAAgB,SAAhBA,SAAgB;AAAA,YAC9BC,SAD8B,GAChBZ,UAAU,CAACa,KADK,CAC9BD,SAD8B;AAEtC,YAAIE,aAAa,GAAGlB,QAApB;AACA,YAAImB,QAAJ;;AACA,YAAIH,SAAS,KAAK,MAAlB,EAA0B;AACxBG,UAAAA,QAAQ,GAAGL,OAAO,GAAG,SAAH,GAAe,SAAjC;AACD,SAFD,MAGK,IAAIE,SAAS,KAAK,gBAAlB,EAAoC;AACvCG,UAAAA,QAAQ,GAAGL,OAAO,GAAG,WAAH,GAAiB,WAAnC;AACD,SAFI,MAGA,IAAIE,SAAS,KAAK,QAAlB,EAA4B;AAC/BG,UAAAA,QAAQ,GAAGL,OAAO,GAAG,WAAH,GAAiB,WAAnC;AACD;;AAAC,eAAO,oBAAC,aAAD;AAAe,UAAA,IAAI,EAAEK,QAArB;AAA+B,UAAA,IAAI,EAAE,EAArC;AAAyC,UAAA,KAAK,EAAEJ,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;AAd4C,KAArB;AAAA,GADzB;AAiBDK,EAAAA,aAAa,EAAE;AACbC,IAAAA,eAAe,EAAE,QADJ;AAEbC,IAAAA,iBAAiB,EAAE;AAFN;AAjBd,CAJuC,CAA1C;AA2BA,IAAMC,QAAQ,GAAG/B,oBAAoB,CAAC;AACpCG,EAAAA,aAAa,EAAEA,aADqB;AAEpCE,EAAAA,WAAW,EAAEA,WAFuB;AAGpCW,EAAAA,SAAS,EAAE;AACTE,IAAAA,MAAM,EAAEF,SADC;AAETgB,IAAAA,iBAAiB,EAAE;AAAA,UAAGpB,UAAH,SAAGA,UAAH;AAAA,aAAqB;AACtCqB,QAAAA,MAAM,EAAE;AAD8B,OAArB;AAAA;AAFV;AAHyB,CAAD,CAArC","sourcesContent":["import React, { Component } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\n\nimport { createAppContainer } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { createBottomTabNavigator } from 'react-navigation-tabs';\n\nimport MainScreen from './Components/MainScreen';\nimport LoadingScreen from './Components/LoadingScreen';\nimport SignUpScreen from './Components/SignUpScreen';\nimport LoginScreen from './Components/LoginScreen';\nimport PersonalSearchTab from './Components/AppTabNavigator/PersonalSearchTab';\nimport MyPageTab from './Components/AppTabNavigator/MyPageTab';\n\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport Login from './Components/LoginScreen';\n\nconst LoadingStack = createStackNavigator({\n  LoadingScreen\n},\n  {\n    defaultNavigationOptions: ({ navigation }) => ({\n      title: 'Loading',\n    }),\n    initialRouteName: 'LoadingScreen',\n  }\n);\n\nconst MainStack = createStackNavigator({\n  MainScreen\n},\n  {\n    defaultNavigationOptions: ({ navigation }) => ({\n      title: 'Main'\n    }),\n  }\n);\n\nconst BottomTab = createBottomTabNavigator({\n  Main: { screen: MainScreen },\n  PersonalSearch: { screen: PersonalSearchTab },\n  MyPage: { screen: MyPageTab }\n}, {\n  defaultNavigationOptions: ({ navigation }) => ({\n    tabBarIcon: ({ focused, tintColor }) => {\n      const { routeName } = navigation.state;\n      let IconComponent = Ionicons;\n      let iconName;\n      if (routeName === 'Main') {\n        iconName = focused ? 'md-home' : 'md-home';\n      }\n      else if (routeName === 'PersonalSearch') {\n        iconName = focused ? 'md-search' : 'md-search';\n      }\n      else if (routeName === 'MyPage') {\n        iconName = focused ? 'md-person' : 'md-person';\n      } return <IconComponent name={iconName} size={25} color={tintColor} />;\n    },\n  }),\n  tabBarOptions: {\n    activeTintColor: 'tomato',\n    inactiveTintColor: 'gray',\n  },\n});\n\nconst AppStack = createStackNavigator({\n  LoadingScreen: LoadingScreen,\n  LoginScreen: LoginScreen,\n  BottomTab: {\n    screen: BottomTab,\n    navigationOptions: ({ navigation }) => ({\n      header: null,\n    }),\n  },\n}\n);\n/*\n\nconst AppStackNavigator = createStackNavigator({\n  Loading: {\n    screen: LoadingScreen\n  },\n  SignUp: {\n    screen: SignUpScreen\n  },\n  Login: {\n    screen: LoginScreen\n  },\n  Main: {\n    screen: MainScreen\n  },\n},\n  {\n    initialRouteName: 'Loading'\n  }\n);\n\n\nconst App = createBottomTabNavigator({\n  Main: { screen: MainScreen },\n  PersonalSearch: { screen: PersonalSearchTab },\n  MyPage: { screen: MyPageTab }\n},\n  {\n    defaultNavigationOptions: ({ navigation }) => ({\n      tabBarIcon: ({ focused, tintColor }) => {\n        const { routeName } = navigation.state;\n        let IconComponent = Ionicons;\n        let iconName;\n        if (routeName === 'Main') {\n          iconName = focused ? 'md-home' : 'md-home';\n        }\n        else if (routeName === 'PersonalSearch') {\n          iconName = focused ? 'md-search' : 'md-search';\n        }\n        else if (routeName === 'MyPage') {\n          iconName = focused ? 'md-person' : 'md-person';\n        } return <IconComponent name={iconName} size={25} color={tintColor} />;\n      },\n    }),\n    tabBarOptions: {\n      activeTintColor: 'tomato',\n      inactiveTintColor: 'gray',\n    },\n  });\n\nconst AppContainer = createAppContainer(AppStackNavigator);\n\nexport default class App extends Component {\n  render() {\n    return <Root><AppContainer /></Root>\n  }\n}\n*/"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/sunjin/Documents/CoWel-app-master/node_modules/react-native-radio-buttons-group/lib/RadioButtonsGroup.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar RadioGroup = function (_Component) {\n  _inherits(RadioGroup, _Component);\n\n  var _super = _createSuper(RadioGroup);\n\n  function RadioGroup(props) {\n    var _this;\n\n    _classCallCheck(this, RadioGroup);\n\n    _this = _super.call(this, props);\n\n    _this.onPress = function (label) {\n      var radioButtons = _this.state.radioButtons;\n      var selectedIndex = radioButtons.findIndex(function (e) {\n        return e.selected == true;\n      });\n      var selectIndex = radioButtons.findIndex(function (e) {\n        return e.label == label;\n      });\n\n      if (selectedIndex != selectIndex) {\n        radioButtons[selectedIndex].selected = false;\n        radioButtons[selectIndex].selected = true;\n\n        _this.setState({\n          radioButtons: radioButtons\n        });\n\n        _this.props.onPress(_this.state.radioButtons);\n      }\n    };\n\n    _this.state = {\n      radioButtons: _this.validate(_this.props.radioButtons)\n    };\n    return _this;\n  }\n\n  _createClass(RadioGroup, [{\n    key: \"validate\",\n    value: function validate(data) {\n      var selected = false;\n      data.map(function (e) {\n        e.color = e.color ? e.color : '#444';\n        e.disabled = e.disabled ? e.disabled : false;\n        e.label = e.label ? e.label : 'You forgot to give label';\n        e.layout = e.layout ? e.layout : 'row';\n        e.selected = e.selected ? e.selected : false;\n\n        if (e.selected) {\n          if (selected) {\n            e.selected = false;\n            console.log('Found \"selected: true\" for more than one button');\n          } else {\n            selected = true;\n          }\n        }\n\n        e.size = e.size ? e.size : 24;\n        e.value = e.value ? e.value : e.label;\n      });\n\n      if (!selected) {\n        data[0].selected = true;\n      }\n\n      return data;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: this.props.flexDirection\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }, this.state.radioButtons.map(function (data) {\n        return React.createElement(RadioButton, {\n          key: data.label,\n          data: data,\n          onPress: _this2.onPress,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }\n        });\n      })));\n    }\n  }]);\n\n  return RadioGroup;\n}(Component);\n\nexport { RadioGroup as default };\n\nvar RadioButton = function (_Component2) {\n  _inherits(RadioButton, _Component2);\n\n  var _super2 = _createSuper(RadioButton);\n\n  function RadioButton() {\n    _classCallCheck(this, RadioButton);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(RadioButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var data = this.props.data;\n      var opacity = data.disabled ? 0.2 : 1;\n      var layout = {\n        flexDirection: 'row'\n      };\n      var margin = {\n        marginLeft: 10\n      };\n\n      if (data.layout === 'column') {\n        layout = {\n          alignItems: 'center'\n        };\n        margin = {\n          marginTop: 10\n        };\n      }\n\n      return React.createElement(TouchableOpacity, {\n        style: [layout, {\n          opacity: opacity,\n          marginHorizontal: 10,\n          marginVertical: 5\n        }],\n        onPress: function onPress() {\n          data.disabled ? null : _this3.props.onPress(data.label);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: [styles.border, {\n          borderColor: data.color,\n          width: data.size,\n          height: data.size,\n          borderRadius: data.size / 2,\n          alignSelf: 'center'\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      }, data.selected && React.createElement(View, {\n        style: {\n          backgroundColor: data.color,\n          width: data.size / 2,\n          height: data.size / 2,\n          borderRadius: data.size / 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }\n      })), React.createElement(Text, {\n        style: [{\n          alignSelf: 'center'\n        }, margin],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }\n      }, data.label));\n    }\n  }]);\n\n  return RadioButton;\n}(Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  border: {\n    borderWidth: 2,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/sunjin/Documents/CoWel-app-master/node_modules/react-native-radio-buttons-group/lib/RadioButtonsGroup.js"],"names":["React","Component","RadioGroup","props","onPress","label","radioButtons","state","selectedIndex","findIndex","e","selected","selectIndex","setState","validate","data","map","color","disabled","layout","console","log","size","value","styles","container","flexDirection","RadioButton","opacity","margin","marginLeft","alignItems","marginTop","marginHorizontal","marginVertical","border","borderColor","width","height","borderRadius","alignSelf","backgroundColor","StyleSheet","create","justifyContent","borderWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nexport default class RadioGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      radioButtons: this.validate(this.props.radioButtons),\n    };\n  }\n\n  validate(data) {\n    let selected = false; // Variable to check if \"selected: true\" for more than one button.\n    data.map(e => {\n      e.color = e.color ? e.color : '#444';\n      e.disabled = e.disabled ? e.disabled : false;\n      e.label = e.label ? e.label : 'You forgot to give label';\n      e.layout = e.layout ? e.layout : 'row';\n      e.selected = e.selected ? e.selected : false;\n      if (e.selected) {\n        if (selected) {\n          e.selected = false; // Making \"selected: false\", if \"selected: true\" is assigned for more than one button.\n          console.log('Found \"selected: true\" for more than one button');\n        } else {\n          selected = true;\n        }\n      }\n      e.size = e.size ? e.size : 24;\n      e.value = e.value ? e.value : e.label;\n    });\n    if (!selected) {\n      data[0].selected = true;\n    }\n    return data;\n  }\n\n  onPress = label => {\n    const radioButtons = this.state.radioButtons;\n    const selectedIndex = radioButtons.findIndex(e => e.selected == true);\n    const selectIndex = radioButtons.findIndex(e => e.label == label);\n    if (selectedIndex != selectIndex) {\n      radioButtons[selectedIndex].selected = false;\n      radioButtons[selectIndex].selected = true;\n      this.setState({ radioButtons });\n      this.props.onPress(this.state.radioButtons);\n    }\n  };\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <View style={{ flexDirection: this.props.flexDirection }}>\n          {this.state.radioButtons.map(data => (\n            <RadioButton\n              key={data.label}\n              data={data}\n              onPress={this.onPress}\n            />\n          ))}\n        </View>\n      </View>\n    );\n  }\n}\n\nclass RadioButton extends Component {\n  render() {\n    const data = this.props.data;\n    const opacity = data.disabled ? 0.2 : 1;\n    let layout = { flexDirection: 'row' };\n    let margin = { marginLeft: 10 };\n    if (data.layout === 'column') {\n      layout = { alignItems: 'center' };\n      margin = { marginTop: 10 };\n    }\n    return (\n      <TouchableOpacity\n        style={[layout, { opacity, marginHorizontal: 10, marginVertical: 5 }]}\n        onPress={() => {\n          data.disabled ? null : this.props.onPress(data.label);\n        }}>\n        <View\n          style={[\n            styles.border,\n            {\n              borderColor: data.color,\n              width: data.size,\n              height: data.size,\n              borderRadius: data.size / 2,\n              alignSelf: 'center'\n            },\n          ]}>\n          {data.selected &&\n            <View\n              style={{\n                backgroundColor: data.color,\n                width: data.size / 2,\n                height: data.size / 2,\n                borderRadius: data.size / 2,\n              }}\n            />}\n        </View>\n        <Text style={[{ alignSelf: 'center' }, margin]}>{data.label}</Text>\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  border: {\n    borderWidth: 2,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}
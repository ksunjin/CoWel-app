{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/sunjin/Documents/CoWel-app-master/Components/LoginScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport firebaseConfig from \"../src/config/fire\";\nimport * as Font from 'expo-font';\nimport { Button, Container, Content, Header, Form, Input, Item, Label } from 'native-base';\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nvar Login = function (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  var _super = _createSuper(Login);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this, props);\n\n    _this.signUpUser = function (email, password) {\n      try {\n        if (_this.state.password.length < 6) {\n          alert(\"please enter at least 6 characters\");\n          return;\n        }\n\n        firebase.auth().createUserWithEmailAndPassword(email, password).then(function () {\n          _this.props.navigation.navigate('MainScreen');\n        });\n      } catch (error) {\n        console.log(error.toString());\n      }\n    };\n\n    _this.loginUser = function (email, password) {\n      try {\n        firebase.auth().signInWithEmailAndPassword(email, password).then(function () {\n          _this.props.navigation.navigate('MainScreen');\n        });\n      } catch (error) {\n        console.log(error.toString());\n      }\n    };\n\n    _this.state = {\n      email: '',\n      password: '',\n      isReady: false\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                'Cafe24Ohsquare': require(\"../assets/fonts/Cafe24Ohsquare.ttf\")\n              }));\n\n            case 2:\n              this.setState({\n                isReady: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Container, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontFamily: 'Cafe24Ohsquare'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }, \"Login\"), React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      }, React.createElement(Item, {\n        floatingLabel: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }\n      }, React.createElement(Label, {\n        style: {\n          fontFamily: 'Cafe24Ohsquare'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }\n      }, \"Email\"), React.createElement(Input, {\n        autoCapitalize: \"none\",\n        autoCorrect: false,\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email\n          });\n        },\n        style: styles.form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }\n      })), React.createElement(Item, {\n        floatingLabel: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }\n      }, React.createElement(Label, {\n        style: {\n          fontFamily: 'Cafe24Ohsquare'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }\n      }, \"Password\"), React.createElement(Input, {\n        secureTextEntry: true,\n        autoCapitalize: \"none\",\n        autoCorrect: false,\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password\n          });\n        },\n        style: styles.form,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }\n      })), React.createElement(Button, {\n        title: \"login\",\n        style: styles.button,\n        rounded: true,\n        success: true,\n        onPress: function onPress() {\n          return _this2.loginUser(_this2.state.email, _this2.state.password);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.button_text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 25\n        }\n      }, \"Login\")), React.createElement(Button, {\n        title: \"signup\",\n        style: styles.button,\n        rounded: true,\n        primary: true,\n        onPress: function onPress() {\n          return _this2.signUpUser(_this2.state.email, _this2.state.password);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.button_text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }\n      }, \"Signup\"))));\n    }\n  }]);\n\n  return Login;\n}(React.Component);\n\nexport { Login as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#E0ECF8\",\n    justifyContent: \"center\",\n    padding: 20\n  },\n  button_text: {\n    color: \"white\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontFamily: \"Cafe24Ohsquare\",\n    fontSize: 30\n  },\n  button: {\n    marginBottom: 20,\n    marginTop: 50,\n    padding: 16,\n    width: 200,\n    alignSelf: \"center\",\n    justifyContent: \"center\"\n  },\n  form: {\n    marginTop: 20,\n    marginBottom: 20,\n    fontFamily: \"Cafe24Ohsquare\"\n  }\n});","map":{"version":3,"sources":["/Users/sunjin/Documents/CoWel-app-master/Components/LoginScreen.js"],"names":["React","Component","firebase","firebaseConfig","Font","Button","Container","Content","Header","Form","Input","Item","Label","apps","length","initializeApp","Login","props","signUpUser","email","password","state","alert","auth","createUserWithEmailAndPassword","then","navigation","navigate","error","console","log","toString","loginUser","signInWithEmailAndPassword","isReady","loadAsync","require","setState","styles","container","fontFamily","form","button","button_text","StyleSheet","create","flex","backgroundColor","justifyContent","padding","color","alignItems","fontSize","marginBottom","marginTop","width","alignSelf"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Platform, StyleSheet, Text, View, TextInput } from 'react-native';\n\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport firebaseConfig from '../src/config/fire';\n\nimport * as Font from 'expo-font';\nimport { Button, Container, Content, Header, Form, Input, Item, Label } from 'native-base';\n\n\nif (!firebase.apps.length) {\n    firebase.initializeApp(firebaseConfig);\n}\n\nexport default class Login extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = ({\n            email: '',\n            password: '',\n            isReady: false,\n        })\n    }\n\n    async componentDidMount() {\n\n        await Font.loadAsync({\n            'Cafe24Ohsquare': require('../assets/fonts/Cafe24Ohsquare.ttf'),\n        });\n\n        this.setState({ isReady: true });\n    }\n\n    signUpUser = (email, password) => {\n        try {\n            if (this.state.password.length < 6) {\n                alert(\"please enter at least 6 characters\")\n                return;\n            }\n            firebase.auth().createUserWithEmailAndPassword(email, password).then(() => {\n                this.props.navigation.navigate('MainScreen')\n            })\n        }\n        catch (error) {\n            console.log(error.toString())\n        }\n\n    }\n    loginUser = (email, password) => {\n        try {\n            firebase.auth().signInWithEmailAndPassword(email, password).then(() => {\n                this.props.navigation.navigate('MainScreen')\n            })\n        } catch (error) {\n            console.log(error.toString())\n        }\n\n    }\n\n    render() {\n        return (\n            <Container style={styles.container}>\n                <Text style={{ fontFamily: 'Cafe24Ohsquare' }}>Login</Text>\n                <Form>\n                    <Item floatingLabel>\n                        <Label style={{ fontFamily: 'Cafe24Ohsquare' }}>Email</Label>\n                        <Input\n                            autoCapitalize=\"none\"\n                            autoCorrect={false}\n                            onChangeText={(email) => this.setState({ email })}\n                            style={styles.form}\n                        />\n                    </Item>\n\n                    <Item floatingLabel>\n                        <Label style={{ fontFamily: 'Cafe24Ohsquare' }}>Password</Label>\n                        <Input\n                            secureTextEntry={true}\n                            autoCapitalize=\"none\"\n                            autoCorrect={false}\n                            onChangeText={(password) => this.setState({ password })}\n                            style={styles.form}\n                        />\n                    </Item>\n\n                    <Button\n                        title=\"login\"\n                        style={styles.button}\n                        rounded\n                        success\n                        onPress={() => this.loginUser(this.state.email, this.state.password)}>\n                        <Text style={styles.button_text}>Login</Text>\n                    </Button>\n\n                    <Button\n                        title=\"signup\"\n                        style={styles.button}\n                        rounded\n                        primary\n                        onPress={() => this.signUpUser(this.state.email, this.state.password)}>\n                        <Text style={styles.button_text}>Signup</Text>\n                    </Button>\n                </Form>\n            </Container>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: \"#E0ECF8\",\n        justifyContent: \"center\",\n        padding: 20\n    },\n    button_text: {\n        color: \"white\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        fontFamily: \"Cafe24Ohsquare\",\n        fontSize: 30\n    },\n    button: {\n        marginBottom: 20,\n        marginTop: 50,\n        padding: 16,\n        width: 200,\n        alignSelf: \"center\",\n        justifyContent: \"center\"\n    },\n    form: {\n        marginTop: 20,\n        marginBottom: 20,\n        fontFamily: \"Cafe24Ohsquare\"\n    }\n})"]},"metadata":{},"sourceType":"module"}
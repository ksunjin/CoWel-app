{"ast":null,"code":"var _jsxFileName = \"/Users/sunjin/Documents/CoWel-app-master/App.js\";\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { createAppContainer, createSwitchNavigator } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { createBottomTabNavigator } from 'react-navigation-tabs';\nimport MainScreen from \"./Components/MainScreen\";\nimport LoadingScreen from \"./Components/LoadingScreen\";\nimport SignUpScreen from \"./Components/SignUpScreen\";\nimport LoginScreen from \"./Components/LoginScreen\";\nimport PersonalSearchTab from \"./Components/AppTabNavigator/PersonalSearchTab\";\nimport MyPageTab from \"./Components/AppTabNavigator/MyPageTab\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nvar App = createSwitchNavigator({\n  Loading: {\n    screen: LoadingScreen\n  },\n  Auth: {\n    screen: LoginScreen\n  },\n  App: {\n    screen: MainScreen\n  }\n});\nvar MainTab = createBottomTabNavigator({\n  Main: {\n    screen: MainScreen\n  },\n  PersonalSearch: {\n    screen: PersonalSearchTab\n  },\n  MyPage: {\n    screen: MyPageTab\n  }\n}, {\n  defaultNavigationOptions: function defaultNavigationOptions(_ref) {\n    var navigation = _ref.navigation;\n    return {\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var focused = _ref2.focused,\n            tintColor = _ref2.tintColor;\n        var routeName = navigation.state.routeName;\n        var IconComponent = Ionicons;\n        var iconName;\n\n        if (routeName === 'Main') {\n          iconName = focused ? 'md-home' : 'md-home';\n        } else if (routeName === 'PersonalSearch') {\n          iconName = focused ? 'md-search' : 'md-search';\n        } else if (routeName === 'MyPage') {\n          iconName = focused ? 'md-person' : 'md-person';\n        }\n\n        return React.createElement(IconComponent, {\n          name: iconName,\n          size: 25,\n          color: tintColor,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 18\n          }\n        });\n      }\n    };\n  },\n  tabBarOptions: {\n    activeTintColor: 'tomato',\n    inactiveTintColor: 'gray'\n  }\n});\nexport default createAppContainer(App);","map":{"version":3,"sources":["/Users/sunjin/Documents/CoWel-app-master/App.js"],"names":["React","Component","createAppContainer","createSwitchNavigator","createStackNavigator","createBottomTabNavigator","MainScreen","LoadingScreen","SignUpScreen","LoginScreen","PersonalSearchTab","MyPageTab","Ionicons","App","Loading","screen","Auth","MainTab","Main","PersonalSearch","MyPage","defaultNavigationOptions","navigation","tabBarIcon","focused","tintColor","routeName","state","IconComponent","iconName","tabBarOptions","activeTintColor","inactiveTintColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAGA,SAASC,kBAAT,EAA6BC,qBAA7B,QAA0D,kBAA1D;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA,SAASC,wBAAT,QAAyC,uBAAzC;AAEA,OAAOC,UAAP;AACA,OAAOC,aAAP;AACA,OAAOC,YAAP;AACA,OAAOC,WAAP;AACA,OAAOC,iBAAP;AACA,OAAOC,SAAP;AAEA,OAAOC,QAAP;AAwBA,IAAMC,GAAG,GAAGV,qBAAqB,CAAC;AAChCW,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAER;AADD,GADuB;AAIhCS,EAAAA,IAAI,EAAE;AACJD,IAAAA,MAAM,EAAEN;AADJ,GAJ0B;AAOhCI,EAAAA,GAAG,EAAE;AACHE,IAAAA,MAAM,EAAET;AADL;AAP2B,CAAD,CAAjC;AAaA,IAAMW,OAAO,GAAGZ,wBAAwB,CAAC;AACvCa,EAAAA,IAAI,EAAE;AAAEH,IAAAA,MAAM,EAAET;AAAV,GADiC;AAEvCa,EAAAA,cAAc,EAAE;AAAEJ,IAAAA,MAAM,EAAEL;AAAV,GAFuB;AAGvCU,EAAAA,MAAM,EAAE;AAAEL,IAAAA,MAAM,EAAEJ;AAAV;AAH+B,CAAD,EAKtC;AACEU,EAAAA,wBAAwB,EAAE;AAAA,QAAGC,UAAH,QAAGA,UAAH;AAAA,WAAqB;AAC7CC,MAAAA,UAAU,EAAE,2BAA4B;AAAA,YAAzBC,OAAyB,SAAzBA,OAAyB;AAAA,YAAhBC,SAAgB,SAAhBA,SAAgB;AAAA,YAC9BC,SAD8B,GAChBJ,UAAU,CAACK,KADK,CAC9BD,SAD8B;AAEtC,YAAIE,aAAa,GAAGhB,QAApB;AACA,YAAIiB,QAAJ;;AACA,YAAIH,SAAS,KAAK,MAAlB,EAA0B;AACxBG,UAAAA,QAAQ,GAAGL,OAAO,GAAG,SAAH,GAAe,SAAjC;AACD,SAFD,MAGK,IAAIE,SAAS,KAAK,gBAAlB,EAAoC;AACvCG,UAAAA,QAAQ,GAAGL,OAAO,GAAG,WAAH,GAAiB,WAAnC;AACD,SAFI,MAGA,IAAIE,SAAS,KAAK,QAAlB,EAA4B;AAC/BG,UAAAA,QAAQ,GAAGL,OAAO,GAAG,WAAH,GAAiB,WAAnC;AACD;;AAAC,eAAO,oBAAC,aAAD;AAAe,UAAA,IAAI,EAAEK,QAArB;AAA+B,UAAA,IAAI,EAAE,EAArC;AAAyC,UAAA,KAAK,EAAEJ,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;AAd4C,KAArB;AAAA,GAD5B;AAiBEK,EAAAA,aAAa,EAAE;AACbC,IAAAA,eAAe,EAAE,QADJ;AAEbC,IAAAA,iBAAiB,EAAE;AAFN;AAjBjB,CALsC,CAAxC;AA6BA,eAAe9B,kBAAkB,CAACW,GAAD,CAAjC","sourcesContent":["import React, { Component } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\n\nimport { createAppContainer, createSwitchNavigator } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\nimport { createBottomTabNavigator } from 'react-navigation-tabs';\n\nimport MainScreen from './Components/MainScreen';\nimport LoadingScreen from './Components/LoadingScreen';\nimport SignUpScreen from './Components/SignUpScreen';\nimport LoginScreen from './Components/LoginScreen';\nimport PersonalSearchTab from './Components/AppTabNavigator/PersonalSearchTab';\nimport MyPageTab from './Components/AppTabNavigator/MyPageTab';\n\nimport Ionicons from 'react-native-vector-icons/Ionicons';\n\n\n/* \nconst AppContainer = createAppContainer(AppStackNavigator);\nconst AppStackNavigator = createStackNavigator({\n  Loading: {\n    screen: LoadingScreen\n  },\n  SignUp: {\n    screen: SignUpScreen\n  },\n  Login: {\n    screen: LoginScreen\n  },\n  Main: {\n    screen: MainScreen\n  },\n},\n  {\n    initialRouteName: 'Loading'\n  }\n);\n*/\nconst App = createSwitchNavigator({\n  Loading: {\n    screen: LoadingScreen,\n  },\n  Auth: {\n    screen: LoginScreen,\n  },\n  App: {\n    screen: MainScreen,\n  },\n});\n\n\nconst MainTab = createBottomTabNavigator({\n  Main: { screen: MainScreen },\n  PersonalSearch: { screen: PersonalSearchTab },\n  MyPage: { screen: MyPageTab }\n},\n  {\n    defaultNavigationOptions: ({ navigation }) => ({\n      tabBarIcon: ({ focused, tintColor }) => {\n        const { routeName } = navigation.state;\n        let IconComponent = Ionicons;\n        let iconName;\n        if (routeName === 'Main') {\n          iconName = focused ? 'md-home' : 'md-home';\n        }\n        else if (routeName === 'PersonalSearch') {\n          iconName = focused ? 'md-search' : 'md-search';\n        }\n        else if (routeName === 'MyPage') {\n          iconName = focused ? 'md-person' : 'md-person';\n        } return <IconComponent name={iconName} size={25} color={tintColor} />;\n      },\n    }),\n    tabBarOptions: {\n      activeTintColor: 'tomato',\n      inactiveTintColor: 'gray',\n    },\n  });\n\n\nexport default createAppContainer(App);"]},"metadata":{},"sourceType":"module"}